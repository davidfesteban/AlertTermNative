package dev.misei.records;

//TODO: ApiClient, Alert, Content and QueryTerm should be autogenerated from the swagger / openapi spec.
//TODO: We dont use mapping to a domain layer on this example for simplicity.

import javax.validation.constraints.NotNull;
import java.util.List;

//TODO: I would refactor some IDs into UUID. We need to keep the consistency on what an ID definition is.
//TODO: I would process it in a AI to understand the context and then abstract the language matching issue
//TODO: I would refactor the entire typing... Language and type as enum, date as a date or real timestamp.

//Asume all alerts are unique
//Usage of records as immutable approach
//Skipping advance validators and robust exception
public record Alert (
        @NotNull(message = "ID cannot be null")
        String id,
        @NotNull(message = "Contents cannot be null")
        List<Content> contents,
        @NotNull(message = "Date cannot be null")
        String date,
        @NotNull(message = "Language cannot be null")
        String language) {
}
